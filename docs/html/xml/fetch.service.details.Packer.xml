<?xml version='1.0' encoding='utf-8'?>
<structtemplate id="fetch::service::details::Packer" name="Packer" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief> Argument packing routines for callables.</brief>
  <doc>This struct contains packer structs that takes function arguments and
serializes them into a referenced byte array. The content of this
struct belongs to the implementational details and are hence not
exposed directly to the developer.
</doc>
  <templatetypeparameter id="fetch::service::details::Packer::T" name="T">
    <brief>is the type of the argument that will be packed next.</brief>
  </templatetypeparameter>
  <templatetypeparameter id="fetch::service::details::Packer::arguments" name="arguments">
    <brief>are the arguments that remains to be pack</brief>
  </templatetypeparameter>
  <method id="fetch::service::details::Packer::SerializeArguments" name="SerializeArguments" static="yes">
    <brief> Implementation of the serialization.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fetch::service::details::Packer::SerializeArguments::serializer" name="serializer">
      <type name="serializer_type" qualifier=" &amp;" ref="fetch::service#fetch::service::serializer_type" />
    </argument>
    <argument id="fetch::service::details::Packer::SerializeArguments::next" name="next">
      <type name="T" qualifier=" &amp;" />
    </argument>
    <argument id="fetch::service::details::Packer::SerializeArguments::args" name="args">
      <type name="arguments..." />
    </argument>
  </method>
</structtemplate>
