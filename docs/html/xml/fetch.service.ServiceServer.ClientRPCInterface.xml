<?xml version='1.0' encoding='utf-8'?>
<class abstract="true" id="fetch::service::ServiceServer::ClientRPCInterface" name="ClientRPCInterface" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>TODO Rename and move</brief>
  <base access="public">
    <type name="ServiceClientInterface" ref="fetch::service::ServiceClientInterface#fetch::service::ServiceClientInterface" />
  </base>
  <constructor abstract="yes" id="fetch::service::ServiceServer::ClientRPCInterface::ClientRPCInterface" name="ClientRPCInterface" />
  <constructor abstract="yes" id="fetch::service::ServiceServer::ClientRPCInterface::ClientRPCInterface" name="ClientRPCInterface">
    <argument id="fetch::service::ServiceServer::ClientRPCInterface::ClientRPCInterface::" name="">
      <type name="ServiceServer&lt;T&gt;::ClientRPCInterface" qualifier=" const &amp;" ref="fetch::service::ServiceServer::ClientRPCInterface#fetch::service::ServiceServer::ClientRPCInterface" />
    </argument>
  </constructor>
  <constructor id="fetch::service::ServiceServer::ClientRPCInterface::ClientRPCInterface" name="ClientRPCInterface">
    <argument id="fetch::service::ServiceServer::ClientRPCInterface::ClientRPCInterface::server" name="server">
      <type name="ServiceServer&lt;T&gt;::self_type" qualifier="*" ref="fetch::service::ServiceServer#fetch::service::ServiceServer::self_type" />
    </argument>
    <argument id="fetch::service::ServiceServer::ClientRPCInterface::ClientRPCInterface::client" name="client">
      <type name="ServiceServer&lt;T&gt;::handle_type" ref="fetch::service::ServiceServer#fetch::service::ServiceServer::handle_type" />
    </argument>
  </constructor>
  <method abstract="yes" id="fetch::service::ServiceServer::ClientRPCInterface::operator=" name="operator=">
    <return>
      <type name="ServiceServer&lt;T&gt;::ClientRPCInterface" qualifier=" const &amp;" ref="fetch::service::ServiceServer::ClientRPCInterface#fetch::service::ServiceServer::ClientRPCInterface" />
    </return>
    <argument id="fetch::service::ServiceServer::ClientRPCInterface::operator=::" name="">
      <type name="ServiceServer&lt;T&gt;::ClientRPCInterface" qualifier=" const &amp;" ref="fetch::service::ServiceServer::ClientRPCInterface#fetch::service::ServiceServer::ClientRPCInterface" />
    </argument>
  </method>
  <method id="fetch::service::ServiceServer::ClientRPCInterface::ProcessMessage" name="ProcessMessage">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="fetch::service::ServiceServer::ClientRPCInterface::ProcessMessage::msg" name="msg">
      <type name="network::message_type" qualifier=" const &amp;" />
    </argument>
  </method>
  <method access="protected" id="fetch::service::ServiceServer::ClientRPCInterface::DeliverRequest" name="DeliverRequest" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fetch::service::ServiceServer::ClientRPCInterface::DeliverRequest::msg" name="msg">
      <type name="network::message_type" qualifier=" const &amp;" />
    </argument>
    <override name="ServiceClientInterface::DeliverRequest" ref="fetch::service::ServiceClientInterface#fetch::service::ServiceClientInterface::DeliverRequest" />
  </method>
</class>
