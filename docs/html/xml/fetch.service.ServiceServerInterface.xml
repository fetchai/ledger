<?xml version='1.0' encoding='utf-8'?>
<class abstract="true" id="fetch::service::ServiceServerInterface" name="ServiceServerInterface" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <subclass access="public" name="ServiceClient" ref="fetch::service::ServiceClient#fetch::service::ServiceClient" />
  <subclass access="public" name="ServiceServer" ref="fetch::service::ServiceServer#fetch::service::ServiceServer" />
  <typedef id="fetch::service::ServiceServerInterface::byte_array_type" name="byte_array_type">
    <brief>TODO: inconsistent way of defining handle</brief>
    <type name="byte_array::ConstByteArray" />
  </typedef>
  <typedef id="fetch::service::ServiceServerInterface::handle_type" name="handle_type">
    <type name="uint64_t" />
  </typedef>
  <destructor id="fetch::service::ServiceServerInterface::~ServiceServerInterface" name="~ServiceServerInterface" virtual="yes" />
  <method id="fetch::service::ServiceServerInterface::Add" name="Add">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fetch::service::ServiceServerInterface::Add::name" name="name">
      <type name="protocol_handler_type" qualifier=" const &amp;" ref="fetch::service#fetch::service::protocol_handler_type" />
    </argument>
    <argument id="fetch::service::ServiceServerInterface::Add::protocol" name="protocol">
      <type name="Protocol" qualifier="*" ref="fetch::service::Protocol#fetch::service::Protocol" />
    </argument>
  </method>
  <method abstract="yes" id="fetch::service::ServiceServerInterface::DeliverResponse" name="DeliverResponse" virtual="yes">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="fetch::service::ServiceServerInterface::DeliverResponse::" name="">
      <type name="handle_type" ref="fetch::service::ServiceServerInterface#fetch::service::ServiceServerInterface::handle_type" />
    </argument>
    <argument id="fetch::service::ServiceServerInterface::DeliverResponse::" name="">
      <type name="network::message_type" qualifier=" const &amp;" />
    </argument>
  </method>
  <method id="fetch::service::ServiceServerInterface::PushProtocolRequest" name="PushProtocolRequest">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="fetch::service::ServiceServerInterface::PushProtocolRequest::client" name="client">
      <type name="handle_type" ref="fetch::service::ServiceServerInterface#fetch::service::ServiceServerInterface::handle_type" />
    </argument>
    <argument id="fetch::service::ServiceServerInterface::PushProtocolRequest::msg" name="msg">
      <type name="network::message_type" qualifier=" const &amp;" />
    </argument>
  </method>
</class>
