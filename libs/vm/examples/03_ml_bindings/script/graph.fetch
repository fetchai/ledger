
function main()

var trainingIterations = 10000;

var s = Array<UInt64>(2);
s[0] = 28ul;
s[1] = 28ul;

var t = Tensor(s);
var g = Graph();
var d = MNISTLoader();
var p = TrainingPair(t);

g.AddPlaceholder("Input");
g.AddFullyConnected("FC_1", "Input", 28*28, 128);
g.AddRelu("Relu_1", "FC_1");
g.AddFullyConnected("FC_2", "Relu_1", 128, 64);
g.AddRelu("Relu_2", "FC_2");
g.AddFullyConnected("FC_3", "Relu_2", 64, 10);
g.AddSoftmax("Softmax", "FC_3");

g.SetInput("Input", t);

for(i in 0:trainingIterations)
    d.GetData(p);
    // No need to call SetInput here as we're reusing same memory space
    var pred = g.Evaluate("Softmax");
endfor


endfunction
