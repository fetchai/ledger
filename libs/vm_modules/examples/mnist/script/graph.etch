function main()

if (System.Argc() != 2)
  print("Usage: VM SCRIPT_FILE PATH/TO/train-images-idx3-ubyte PATH/TO/train-labels-idx1-ubyte");
  return;
endif
  
var training_iterations = 100;

// Define the neural network
var g = Graph();
g.AddPlaceholder("Input");
g.AddFullyConnected("FC_1", "Input", 28*28, 128);
g.AddRelu("Relu_1", "FC_1");
g.AddFullyConnected("FC_2", "Relu_1", 128, 64);
g.AddRelu("Relu_2", "FC_2");
g.AddFullyConnected("FC_3", "Relu_2", 64, 10);
g.AddSoftmax("Softmax", "FC_3");

// Set up the dataloader
var data_loader = MNISTLoader(System.Argv(0), System.Argv(1));

// Set up the optimiser
var optimiser = AdamOptimiser(g, "Input", "Softmax");

// Begin the training loop
var batch_size = 64u64;
var subset_size = (100u64 * 64u64);
for(i in 0:training_iterations)
    print("Current Loss: " + toString(optimiser.Run(data_loader, batch_size, subset_size)));
endfor

endfunction
