function ascii_same_size()

    // with regards to character
    var myString1 : String = "a";
    var myString2 : String = "b";

    assert(myString1 < myString2);

endfunction


function ascii_different_size()

    // with regards to character
    var myString1 : String = "ab";
    var myString2 : String = "b";

    assert(myString1 < myString2);

endfunction


// Table of 4-byte long UTF-8 characters (when encoded to binary)
// See the http://www.i18nguy.com/unicode/supplementary-test.html#IICORE
// -----------------------
// | Unicode | Character |
// | Scalar  | Graphical |
// | Value   | Repr.     |
// | --------|-----------|
// | U+2070E |    𠜎     |
// | U+20731 |    𠜱     |
// | U+20779 |    𠝹     |
// | U+20C53 |    𠱓     |
// | U+20C78 |    𠱸     |
// | U+20C96 |    𠲖     |
// | U+20CCF |    𠳏     |
// | U+20CD5 |    𠳕     |
// | U+20D15 |    𠴕     |
// | U+20D7C |    𠵼     |
// | U+20D7F |    𠵿     |
// | U+20E0E |    𠸎     |
// | U+20E0F |    𠸏     |
// | U+20E77 |    𠹷     |
// | U+20E9D |    𠺝     |
// | U+20EA2 |    𠺢     |
// | U+20ED7 |    𠻗     |
// | U+20EF9 |    𠻹     |
// | U+20EFA |    𠻺     |
// | U+20F2D |    𠼭     |
// | U+20F2E |    𠼮     |
// | U+20F4C |    𠽌     |
// | U+20FB4 |    𠾴     |
// | U+20FBC |    𠾼     |
// | U+20FEA |    𠿪     |
// | U+2105C |    𡁜     |
// | U+2106F |    𡁯     |
// | U+21075 |    𡁵     |
// | U+21076 |    𡁶     |
// | U+2107B |    𡁻     |
// | U+210C1 |    𡃁     |
// | U+210C9 |    𡃉     |
// | U+211D9 |    𡇙     |
// | U+220C7 |    𢃇     |
// | U+227B5 |    𢞵     |
// | U+22AD5 |    𢫕     |
// | U+22B43 |    𢭃     |
// | U+22BCA |    𢯊     |
// | U+22C51 |    𢱑     |
// | U+22C55 |    𢱕     |
// | U+22CC2 |    𢳂     |
// | U+22D08 |    𢴈     |
// | U+22D4C |    𢵌     |
// | U+22D67 |    𢵧     |
// | U+22EB3 |    𢺳     |
// | U+23CB7 |    𣲷     |
// | U+244D3 |    𤓓     |
// | U+24DB8 |    𤶸     |
// | U+24DEA |    𤷪     |
// | U+2512B |    𥄫     |
// | U+26258 |    𦉘     |
// | U+267CC |    𦟌     |
// | U+269F2 |    𦧲     |
// | U+269FA |    𦧺     |
// | U+27A3E |    𧨾     |
// | U+2815D |    𨅝     |
// | U+28207 |    𨈇     |
// | U+282E2 |    𨋢     |
// | U+28CCA |    𨳊     |
// | U+28CCD |    𨳍     |
// | U+28CD2 |    𨳒     |
// | U+29D98 |    𩶘     |
// ----------------------


function utf8_same_size()

    var myString1 : String = "𠜎"; // Unicode scalar value = U+2070E
    var myString2 : String = "𠜱"; // Unicode scalar value = U+20731

    // *Binary* comparison (boils down to comparing sequence UTF-8 Unicode scalar values)
    assert(myString1 < myString2);

endfunction


function utf8_different_size()

    var myString1 : String = "𠜎𩶘 "; // Unicode scalar values: U+2070E U+29D98
    var myString2 : String = "𠜱"; // Unicode scalar value: U+20731

    // *Binary* comparison (boils down to comparing sequence UTF-8 Unicode scalar values)
    assert(myString1 < myString2);

endfunction


function main()

    ascii_same_size();
    ascii_different_size();

    utf8_same_size();
    utf8_different_size();

endfunction
