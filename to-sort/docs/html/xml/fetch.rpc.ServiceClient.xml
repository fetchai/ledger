<?xml version='1.0' encoding='utf-8'?>
<class id="fetch::rpc::ServiceClient" name="ServiceClient" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <base access="public">
    <type name="network::NetworkClient" />
  </base>
  <methodtemplate id="fetch::rpc::ServiceClient::Call" name="Call">
    <return>
      <type name="Promise" ref="fetch::rpc::Promise#fetch::rpc::Promise" />
    </return>
    <argument id="fetch::rpc::ServiceClient::Call::protocol" name="protocol">
      <type name="protocol_handler_type" qualifier=" const &amp;" ref="fetch::rpc#fetch::rpc::protocol_handler_type" />
    </argument>
    <argument id="fetch::rpc::ServiceClient::Call::function" name="function">
      <type name="function_handler_type" qualifier=" const &amp;" ref="fetch::rpc#fetch::rpc::function_handler_type" />
    </argument>
    <argument id="fetch::rpc::ServiceClient::Call::args" name="args">
      <type name="arguments..." />
    </argument>
    <templatetypeparameter id="fetch::rpc::ServiceClient::Call::arguments" name="arguments" />
  </methodtemplate>
  <typedef id="fetch::rpc::ServiceClient::byte_array_type" name="byte_array_type">
    <type name="byte_array::ReferencedByteArray" />
  </typedef>
  <constructor id="fetch::rpc::ServiceClient::ServiceClient" name="ServiceClient">
    <argument id="fetch::rpc::ServiceClient::ServiceClient::host" name="host">
      <type name="byte_array_type" qualifier=" const &amp;" ref="fetch::rpc::ServiceClient#fetch::rpc::ServiceClient::byte_array_type" />
    </argument>
    <argument id="fetch::rpc::ServiceClient::ServiceClient::port" name="port">
      <type name="uint16_t" qualifier=" const &amp;" />
    </argument>
  </constructor>
  <destructor id="fetch::rpc::ServiceClient::~ServiceClient" name="~ServiceClient" />
  <method id="fetch::rpc::ServiceClient::PushMessage" name="PushMessage" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fetch::rpc::ServiceClient::PushMessage::msg" name="msg">
      <type name="network::message_type" qualifier=" const &amp;" />
    </argument>
  </method>
  <method id="fetch::rpc::ServiceClient::Subscribe" name="Subscribe">
    <return>
      <type name="subscription_handler_type" ref="fetch::rpc#fetch::rpc::subscription_handler_type" />
    </return>
    <argument id="fetch::rpc::ServiceClient::Subscribe::protocol" name="protocol">
      <type name="protocol_handler_type" qualifier=" const &amp;" ref="fetch::rpc#fetch::rpc::protocol_handler_type" />
    </argument>
    <argument id="fetch::rpc::ServiceClient::Subscribe::feed" name="feed">
      <type name="feed_handler_type" qualifier=" const &amp;" ref="fetch::rpc#fetch::rpc::feed_handler_type" />
    </argument>
    <argument id="fetch::rpc::ServiceClient::Subscribe::callback" name="callback">
      <type name="AbstractCallable" qualifier="*" ref="fetch::rpc::AbstractCallable#fetch::rpc::AbstractCallable" />
    </argument>
  </method>
  <method id="fetch::rpc::ServiceClient::Unsubscribe" name="Unsubscribe">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fetch::rpc::ServiceClient::Unsubscribe::id" name="id">
      <type name="subscription_handler_type" ref="fetch::rpc#fetch::rpc::subscription_handler_type" />
    </argument>
  </method>
</class>
