<?xml version='1.0' encoding='utf-8'?>
<class id="fetch::storage::VariantStack" name="VariantStack" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <methodtemplate id="fetch::storage::VariantStack::Push" name="Push">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fetch::storage::VariantStack::Push::object" name="object">
      <type name="const T" qualifier=" const &amp;" />
    </argument>
    <argument id="fetch::storage::VariantStack::Push::type" name="type">
      <type name="uint64_t" qualifier=" const &amp;" />
    </argument>
    <templatetypeparameter id="fetch::storage::VariantStack::Push::T" name="T" />
  </methodtemplate>
  <methodtemplate id="fetch::storage::VariantStack::Top" name="Top">
    <return>
      <type name="uint64_t" />
    </return>
    <argument id="fetch::storage::VariantStack::Top::object" name="object">
      <type name="T" qualifier=" &amp;" />
    </argument>
    <templatetypeparameter id="fetch::storage::VariantStack::Top::T" name="T" />
  </methodtemplate>
  <struct name="Header" ref="fetch::storage::VariantStack::Header#fetch::storage::VariantStack::Header" />
  <struct name="Separator" ref="fetch::storage::VariantStack::Separator#fetch::storage::VariantStack::Separator" />
  <enum anonymous="yes" id="fetch::storage::VariantStack::(anonymous::1)" name="(anonymous::1)">
    <enumvalue id="fetch::storage::VariantStack::UNDEFINED_POSITION" name="UNDEFINED_POSITION" value="18446744073709551615" />
  </enum>
  <typedef id="fetch::storage::VariantStack::byte_array_type" name="byte_array_type">
    <type name="byte_array::ReferencedByteArray" />
  </typedef>
  <method id="fetch::storage::VariantStack::Clear" name="Clear">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="fetch::storage::VariantStack::empty" name="empty">
    <return>
      <type builtin="yes" name="bool" />
    </return>
  </method>
  <method id="fetch::storage::VariantStack::Load" name="Load">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fetch::storage::VariantStack::Load::filename" name="filename">
      <type name="byte_array_type" qualifier=" const &amp;" ref="fetch::storage::VariantStack#fetch::storage::VariantStack::byte_array_type" />
    </argument>
  </method>
  <method id="fetch::storage::VariantStack::New" name="New">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fetch::storage::VariantStack::New::filename" name="filename">
      <type name="byte_array_type" qualifier=" const &amp;" ref="fetch::storage::VariantStack#fetch::storage::VariantStack::byte_array_type" />
    </argument>
  </method>
  <method id="fetch::storage::VariantStack::Pop" name="Pop">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="fetch::storage::VariantStack::size" name="size">
    <return>
      <type name="size_t" />
    </return>
  </method>
  <method id="fetch::storage::VariantStack::Type" name="Type">
    <return>
      <type name="uint64_t" />
    </return>
  </method>
</class>
