<?xml version='1.0' encoding='utf-8'?>
<class id="fetch::rpc::Function" name="Function" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>No function args, void return</brief>
  <base access="public">
    <type name="AbstractCallable" ref="fetch::rpc::AbstractCallable#fetch::rpc::AbstractCallable" />
    <brief> Abstract class for callables.</brief>
  </base>
  <constructor id="fetch::rpc::Function::Function" name="Function">
    <argument id="fetch::rpc::Function::Function::value" name="value">
      <type name="Function&lt;void ()&gt;::function_type" ref="fetch::rpc::Function#fetch::rpc::Function::function_type" />
    </argument>
  </constructor>
  <method id="fetch::rpc::Function::operator()" name="operator()" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fetch::rpc::Function::operator()::result" name="result">
      <type name="serializer_type" qualifier=" &amp;" ref="fetch::rpc#fetch::rpc::serializer_type" />
    </argument>
    <argument id="fetch::rpc::Function::operator()::params" name="params">
      <type name="serializer_type" qualifier=" &amp;" ref="fetch::rpc#fetch::rpc::serializer_type" />
    </argument>
    <override name="AbstractCallable::operator()" ref="fetch::rpc::AbstractCallable#fetch::rpc::AbstractCallable::operator()" />
  </method>
</class>
