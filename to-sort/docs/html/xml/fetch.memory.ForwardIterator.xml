<?xml version='1.0' encoding='utf-8'?>
<classtemplate abstract="true" id="fetch::memory::ForwardIterator" name="ForwardIterator" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <templatetypeparameter id="fetch::memory::ForwardIterator::T" name="T" />
  <constructor abstract="yes" id="fetch::memory::ForwardIterator::ForwardIterator&lt;T&gt;" name="ForwardIterator&lt;T&gt;" />
  <constructor abstract="yes" id="fetch::memory::ForwardIterator::ForwardIterator&lt;T&gt;" name="ForwardIterator&lt;T&gt;">
    <argument id="fetch::memory::ForwardIterator::ForwardIterator&lt;T&gt;::other" name="other">
      <type name="ForwardIterator" qualifier=" const &amp;" ref="fetch::memory::ForwardIterator#fetch::memory::ForwardIterator" />
    </argument>
  </constructor>
  <constructor abstract="yes" id="fetch::memory::ForwardIterator::ForwardIterator&lt;T&gt;" name="ForwardIterator&lt;T&gt;">
    <argument id="fetch::memory::ForwardIterator::ForwardIterator&lt;T&gt;::other" name="other">
      <type name="ForwardIterator&lt;T&gt; &amp;&amp;" />
    </argument>
  </constructor>
  <method abstract="yes" id="fetch::memory::ForwardIterator::operator=" name="operator=">
    <return>
      <type name="ForwardIterator" qualifier=" &amp;" ref="fetch::memory::ForwardIterator#fetch::memory::ForwardIterator" />
    </return>
    <argument id="fetch::memory::ForwardIterator::operator=::other" name="other">
      <type name="ForwardIterator" qualifier=" const &amp;" ref="fetch::memory::ForwardIterator#fetch::memory::ForwardIterator" />
    </argument>
  </method>
  <method abstract="yes" id="fetch::memory::ForwardIterator::operator=" name="operator=">
    <return>
      <type name="ForwardIterator" qualifier=" &amp;" ref="fetch::memory::ForwardIterator#fetch::memory::ForwardIterator" />
    </return>
    <argument id="fetch::memory::ForwardIterator::operator=::other" name="other">
      <type name="ForwardIterator&lt;T&gt; &amp;&amp;" />
    </argument>
  </method>
  <constructor id="fetch::memory::ForwardIterator::ForwardIterator&lt;T&gt;" name="ForwardIterator&lt;T&gt;">
    <argument id="fetch::memory::ForwardIterator::ForwardIterator&lt;T&gt;::pos" name="pos">
      <type name="T" qualifier="*" />
    </argument>
  </constructor>
  <constructor id="fetch::memory::ForwardIterator::ForwardIterator&lt;T&gt;" name="ForwardIterator&lt;T&gt;">
    <argument id="fetch::memory::ForwardIterator::ForwardIterator&lt;T&gt;::pos" name="pos">
      <type name="T" qualifier="*" />
    </argument>
    <argument id="fetch::memory::ForwardIterator::ForwardIterator&lt;T&gt;::end" name="end">
      <type name="T" qualifier="*" />
    </argument>
  </constructor>
  <method id="fetch::memory::ForwardIterator::operator++" name="operator++">
    <return>
      <type name="ForwardIterator" qualifier=" &amp;" ref="fetch::memory::ForwardIterator#fetch::memory::ForwardIterator" />
    </return>
  </method>
  <method id="fetch::memory::ForwardIterator::operator*" name="operator*">
    <return>
      <type name="T" qualifier=" &amp;" />
    </return>
  </method>
  <method id="fetch::memory::ForwardIterator::operator==" name="operator==">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="fetch::memory::ForwardIterator::operator==::other" name="other">
      <type name="ForwardIterator" qualifier=" const &amp;" ref="fetch::memory::ForwardIterator#fetch::memory::ForwardIterator" />
    </argument>
  </method>
  <method id="fetch::memory::ForwardIterator::operator!=" name="operator!=">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="fetch::memory::ForwardIterator::operator!=::other" name="other">
      <type name="ForwardIterator" qualifier=" const &amp;" ref="fetch::memory::ForwardIterator#fetch::memory::ForwardIterator" />
    </argument>
  </method>
</classtemplate>
