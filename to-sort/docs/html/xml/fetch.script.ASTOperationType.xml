<?xml version='1.0' encoding='utf-8'?>
<struct id="fetch::script::ASTOperationType" name="ASTOperationType" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <subclass access="public" name="ASTGroupOperationType" ref="fetch::script::ASTGroupOperationType#fetch::script::ASTGroupOperationType" />
  <field id="fetch::script::ASTOperationType::type" name="type">
    <brief>typedef std::function&lt; bool(node_ptr_list const &amp;nodes, std::size_t const</brief>
    <doc>&amp;i) &gt; qualify_function_type;</doc>
    <type name="uint16_t" />
  </field>
  <field id="fetch::script::ASTOperationType::properties" name="properties">
    <type name="uint16_t" />
  </field>
  <field id="fetch::script::ASTOperationType::precendence" name="precendence">
    <type name="uint16_t" />
  </field>
  <field id="fetch::script::ASTOperationType::next" name="next">
    <brief>qualify_function_type test = [](std::vector&amp;lt; ast\_node\_ptr &amp;gt; const &amp;,</brief>
    <doc>std::size_t const&amp;) { return true; };</doc>
    <type name="uint16_t" />
  </field>
  <typedef id="fetch::script::ASTOperationType::ast_node_ptr" name="ast_node_ptr">
    <type name="std::__1::shared_ptr&lt;fetch::script::ASTNode&gt;" />
  </typedef>
  <typedef id="fetch::script::ASTOperationType::node_ptr_list" name="node_ptr_list">
    <type name="std::__1::vector&lt;std::__1::shared_ptr&lt;fetch::script::ASTNode&gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;fetch::script::ASTNode&gt; &gt; &gt;" />
  </typedef>
  <constructor id="fetch::script::ASTOperationType::ASTOperationType" name="ASTOperationType">
    <argument id="fetch::script::ASTOperationType::ASTOperationType::t" name="t">
      <type name="uint16_t" />
    </argument>
    <argument id="fetch::script::ASTOperationType::ASTOperationType::pro" name="pro">
      <type name="uint16_t" />
    </argument>
    <argument id="fetch::script::ASTOperationType::ASTOperationType::pre" name="pre">
      <type name="uint16_t" />
    </argument>
    <argument id="fetch::script::ASTOperationType::ASTOperationType::n" name="n">
      <type name="uint16_t" />
    </argument>
  </constructor>
  <method id="fetch::script::ASTOperationType::operator&lt;" name="operator&lt;">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="fetch::script::ASTOperationType::operator&lt;::other" name="other">
      <type name="ASTOperationType" qualifier=" const &amp;" ref="fetch::script::ASTOperationType#fetch::script::ASTOperationType" />
    </argument>
  </method>
</struct>
