<?xml version='1.0' encoding='utf-8'?>
<namespace id="fetch::unittest::details" name="details" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <variable id="fetch::unittest::details::inserted_programs" name="inserted_programs">
    <type name="std::__1::vector&lt;std::__1::shared_ptr&lt;fetch::unittest::ProgramInserter&gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;fetch::unittest::ProgramInserter&gt; &gt; &gt;" />
  </variable>
  <functiontemplate id="fetch::unittest::details::NewNestedProgram" name="NewNestedProgram">
    <return>
      <type name="shared_inserter_type" ref="fetch::unittest::details#fetch::unittest::details::shared_inserter_type" />
    </return>
    <argument id="fetch::unittest::details::NewNestedProgram::Args" name="Args">
      <type name="A..." />
    </argument>
    <templatetypeparameter id="fetch::unittest::details::NewNestedProgram::A" name="A" />
  </functiontemplate>
  <functiontemplate id="fetch::unittest::details::NewTest" name="NewTest">
    <return>
      <type name="shared_context_type" ref="fetch::unittest::details#fetch::unittest::details::shared_context_type" />
    </return>
    <argument id="fetch::unittest::details::NewTest::Args" name="Args">
      <type name="A..." />
    </argument>
    <templatetypeparameter id="fetch::unittest::details::NewTest::A" name="A" />
  </functiontemplate>
  <variable id="fetch::unittest::details::unit_tests" name="unit_tests">
    <type name="std::__1::vector&lt;std::__1::shared_ptr&lt;fetch::unittest::TestContext&gt;, std::__1::allocator&lt;std::__1::shared_ptr&lt;fetch::unittest::TestContext&gt; &gt; &gt;" />
  </variable>
  <typedef id="fetch::unittest::details::shared_context_type" name="shared_context_type">
    <type name="std::__1::shared_ptr&lt;fetch::unittest::TestContext&gt;" />
  </typedef>
  <typedef id="fetch::unittest::details::shared_inserter_type" name="shared_inserter_type">
    <type name="std::__1::shared_ptr&lt;fetch::unittest::ProgramInserter&gt;" />
  </typedef>
  <function id="fetch::unittest::details::last_inserter" name="last_inserter">
    <return>
      <type name="ProgramInserter" qualifier=" &amp;" ref="fetch::unittest::ProgramInserter#fetch::unittest::ProgramInserter" />
    </return>
  </function>
</namespace>
