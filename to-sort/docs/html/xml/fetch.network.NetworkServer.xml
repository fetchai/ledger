<?xml version='1.0' encoding='utf-8'?>
<class id="fetch::network::NetworkServer" name="NetworkServer" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <base access="public">
    <type name="AbstractNetworkServer" ref="fetch::network::AbstractNetworkServer#fetch::network::AbstractNetworkServer" />
  </base>
  <subclass access="public" name="rpc::ServiceServer" ref="fetch::rpc::ServiceServer#fetch::rpc::ServiceServer" />
  <struct name="Request" ref="fetch::network::NetworkServer::Request#fetch::network::NetworkServer::Request" />
  <typedef id="fetch::network::NetworkServer::handle_type" name="handle_type">
    <type name="uint64_t" />
  </typedef>
  <constructor id="fetch::network::NetworkServer::NetworkServer" name="NetworkServer">
    <argument id="fetch::network::NetworkServer::NetworkServer::port" name="port">
      <type name="uint16_t" />
    </argument>
  </constructor>
  <destructor id="fetch::network::NetworkServer::~NetworkServer" name="~NetworkServer" />
  <method id="fetch::network::NetworkServer::Broadcast" name="Broadcast">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fetch::network::NetworkServer::Broadcast::msg" name="msg">
      <type name="message_type" qualifier=" const &amp;" ref="fetch::network#fetch::network::message_type" />
    </argument>
  </method>
  <method id="fetch::network::NetworkServer::has_requests" name="has_requests">
    <return>
      <type builtin="yes" name="bool" />
    </return>
  </method>
  <method id="fetch::network::NetworkServer::Pop" name="Pop">
    <brief>*</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="fetch::network::NetworkServer::PushRequest" name="PushRequest" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="fetch::network::NetworkServer::PushRequest::client" name="client">
      <type name="handle_type" ref="fetch::network::NetworkServer#fetch::network::NetworkServer::handle_type" />
    </argument>
    <argument id="fetch::network::NetworkServer::PushRequest::msg" name="msg">
      <type name="message_type" qualifier=" const &amp;" ref="fetch::network#fetch::network::message_type" />
    </argument>
    <override name="AbstractNetworkServer::PushRequest" ref="fetch::network::AbstractNetworkServer#fetch::network::AbstractNetworkServer::PushRequest" />
  </method>
  <method id="fetch::network::NetworkServer::Send" name="Send">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="fetch::network::NetworkServer::Send::client" name="client">
      <type name="handle_type" ref="fetch::network::NetworkServer#fetch::network::NetworkServer::handle_type" />
    </argument>
    <argument id="fetch::network::NetworkServer::Send::msg" name="msg">
      <type name="message_type" qualifier=" const &amp;" ref="fetch::network#fetch::network::message_type" />
    </argument>
  </method>
  <method id="fetch::network::NetworkServer::Start" name="Start" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="fetch::network::NetworkServer::Stop" name="Stop" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="fetch::network::NetworkServer::Top" name="Top">
    <brief>*</brief>
    <return>
      <type name="Request" ref="fetch::network::NetworkServer::Request#fetch::network::NetworkServer::Request" />
    </return>
  </method>
</class>
