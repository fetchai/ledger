<?xml version='1.0' encoding='utf-8'?>
<classtemplate id="fetch::optimisation::BruteForceOptimiser" name="BruteForceOptimiser" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <templatetypeparameter id="fetch::optimisation::BruteForceOptimiser::T" name="T" />
  <typedef id="fetch::optimisation::BruteForceOptimiser::cost_type" name="cost_type">
    <type name="T" />
  </typedef>
  <typedef id="fetch::optimisation::BruteForceOptimiser::state_type" name="state_type">
    <type name="uint64_t" />
  </typedef>
  <constructor id="fetch::optimisation::BruteForceOptimiser::BruteForceOptimiser&lt;T&gt;" name="BruteForceOptimiser&lt;T&gt;">
    <argument id="fetch::optimisation::BruteForceOptimiser::BruteForceOptimiser&lt;T&gt;::n" name="n">
      <type name="size_t" qualifier=" const &amp;" />
    </argument>
  </constructor>
  <method id="fetch::optimisation::BruteForceOptimiser::operator()" name="operator()">
    <return>
      <type name="BruteForceOptimiser&lt;T&gt;::cost_type" qualifier=" const &amp;" ref="fetch::optimisation::BruteForceOptimiser#fetch::optimisation::BruteForceOptimiser::cost_type" />
    </return>
    <argument id="fetch::optimisation::BruteForceOptimiser::operator()::i" name="i">
      <type name="size_t" qualifier=" const &amp;" />
    </argument>
    <argument id="fetch::optimisation::BruteForceOptimiser::operator()::j" name="j">
      <type name="size_t" qualifier=" const &amp;" />
    </argument>
  </method>
  <method id="fetch::optimisation::BruteForceOptimiser::operator()" name="operator()">
    <return>
      <type name="BruteForceOptimiser&lt;T&gt;::cost_type" qualifier=" &amp;" ref="fetch::optimisation::BruteForceOptimiser#fetch::optimisation::BruteForceOptimiser::cost_type" />
    </return>
    <argument id="fetch::optimisation::BruteForceOptimiser::operator()::i" name="i">
      <type name="size_t" qualifier=" const &amp;" />
    </argument>
    <argument id="fetch::optimisation::BruteForceOptimiser::operator()::j" name="j">
      <type name="size_t" qualifier=" const &amp;" />
    </argument>
  </method>
  <method id="fetch::optimisation::BruteForceOptimiser::FindMinimum" name="FindMinimum">
    <return>
      <type name="BruteForceOptimiser&lt;T&gt;::cost_type" ref="fetch::optimisation::BruteForceOptimiser#fetch::optimisation::BruteForceOptimiser::cost_type" />
    </return>
  </method>
  <method id="fetch::optimisation::BruteForceOptimiser::FindMinimum" name="FindMinimum">
    <return>
      <type name="BruteForceOptimiser&lt;T&gt;::cost_type" ref="fetch::optimisation::BruteForceOptimiser#fetch::optimisation::BruteForceOptimiser::cost_type" />
    </return>
    <argument id="fetch::optimisation::BruteForceOptimiser::FindMinimum::ret" name="ret">
      <type name="BruteForceOptimiser&lt;T&gt;::state_type" qualifier=" &amp;" ref="fetch::optimisation::BruteForceOptimiser#fetch::optimisation::BruteForceOptimiser::state_type" />
    </argument>
  </method>
  <method id="fetch::optimisation::BruteForceOptimiser::UpdateCouplingCache" name="UpdateCouplingCache">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="fetch::optimisation::BruteForceOptimiser::CostOf" name="CostOf">
    <return>
      <type name="BruteForceOptimiser&lt;T&gt;::cost_type" ref="fetch::optimisation::BruteForceOptimiser#fetch::optimisation::BruteForceOptimiser::cost_type" />
    </return>
    <argument id="fetch::optimisation::BruteForceOptimiser::CostOf::c" name="c">
      <type name="BruteForceOptimiser&lt;T&gt;::state_type" qualifier=" const &amp;" ref="fetch::optimisation::BruteForceOptimiser#fetch::optimisation::BruteForceOptimiser::state_type" />
    </argument>
  </method>
  <method id="fetch::optimisation::BruteForceOptimiser::size" name="size">
    <return>
      <type name="size_t" qualifier=" const &amp;" />
    </return>
  </method>
</classtemplate>
